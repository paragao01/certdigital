/* Generated by Together */

package br.certdigital.tools.error;

import java.io.PrintStream;
import java.io.PrintWriter;

public class BaseException extends Exception {

	private static final long serialVersionUID = 1L;

	private Throwable error;

	public BaseException() {

	}

	public BaseException(String message) {

		super(message);

	}

	public BaseException(Throwable e) {

		this.error = e;

	}

	public String getMessage() {

		if (error != null)
			return error.getMessage();

		else
			return super.getMessage();

	}

	public String toString() {

		if (error != null)
			return error.toString();

		else
			return super.toString();

	}

	public void printStackTrace() {

		if (error != null)
			error.printStackTrace();

		else
			super.printStackTrace();

	}

	public void printStackTrace(PrintStream s) {

		if (error != null)
			error.printStackTrace(s);

		else
			super.printStackTrace(s);

	}

	public void printStackTrace(PrintWriter s) {

		if (error != null)
			error.printStackTrace(s);

		else
			super.printStackTrace(s);

	}

	/**
	 * 
	 * 
	 * 
	 * @return Exception salva na instancia.
	 * 
	 */

	public Throwable getErrorSaved() {

		return error;

	}

	/**
	 * 
	 * 
	 * 
	 * @return A primeira Exception do erro (no caso de uma cadeia).
	 * 
	 */

	public Throwable getSourceError() {

		Throwable err = error;

		while (err != null && err instanceof BaseException)

			err = ((BaseException) err).getErrorSaved();

		if (err != null)
			return err;

		else
			return this;

	}

}
